<?php
/* 
 * Generated by CRUDigniter v2.1 Beta 
 * www.crudigniter.com
 */
 
class Faculty_admin extends APP_Controller 
{
    function __construct()
    {
        parent::__construct();
		if (!$this->ion_auth->logged_in()) {
            // redirect them to the login page
            redirect('auth/login', 'refresh');
        }
		else {
			if (!check_access($this->session->userdata('user_id'),'faculty_admin')){
				redirect(get_default_page($this->session->userdata('user_id')), 'refresh');
			}
		}
        $this->load->model('Faculty_admin_model');
    } 

    /*
     * Listing of faculty_admins
     */
    function index()
    {
        $data['faculty_admins'] = $this->Faculty_admin_model->get_all_faculty_admins_details();
        //$this->load->view('faculty_admin/index',$data);
		$this->_tpl('faculty_admin/list', $data);
    }

    /*
     * Adding a new faculty_admin
     */
    function add()
    {   
	
	    $data['faculties'] = $this->Faculty_model->get_all_faculty(); 
        $this->form_validation->set_rules('password','Password','required|max_length[255]');
		$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
		$this->form_validation->set_rules('first_name','First Name','max_length[50]|required');
		$this->form_validation->set_rules('last_name','Last Name','max_length[50]|required');
		$this->form_validation->set_rules('faculty_id[]','Faculty','required');
		
		if($this->form_validation->run())     
        {  
            $email    = strtolower($this->input->post('email'));
            $identity = $email;
            $password = $this->input->post('password');

            $additional_data = array(
                'first_name' => $this->input->post('first_name'),
                'last_name'  => $this->input->post('last_name'),
                'company'    => $this->input->post('company'),
                'phone'      => $this->input->post('phone'),
            );
			$groups = array('3');
			$user_id = $this->Ion_auth_model->register($identity, $password, $email, $additional_data,$groups);
            
            /*$params = array(
				'faculty_id' => $this->input->post('faculty_id'),
				'user_id' => $user_id,
            );
			$Faculty_admin_id = $this->Faculty_admin_model->add_faculty_admin($params);*/
			$params = array();
			 foreach ($this->input->post('faculty_id') as $selectedOption){
				$faculty_admin_data = array(
				  'faculty_id' => $selectedOption,
				  'user_id' => $user_id,
			   );
			   $params[] = $faculty_admin_data;
			}  
            if(count($params)){
				 $faculty_admin_id = $this->Faculty_admin_model->add_faculty_admin_in_batch($params);
				 echo $this->db->last_query();
			}
           
            redirect('faculty_admin');
        }
		else
        {
            $this->_tpl('faculty_admin/add',$data);
        }
    }  

    /*
     * Editing a faculty_admin
     */
    function edit($id)
    {   
		$data['faculties'] = $this->Faculty_model->get_all_faculty(); 
        // check if the faculty_admin exists before trying to edit it
        $faculty_admin = $this->Faculty_admin_model->get_faculty_admin($id);
        
		if(isset($faculty_admin['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('email','Email','required|max_length[100]|valid_email');
			$this->form_validation->set_rules('first_name','First Name','max_length[50]|required');
			$this->form_validation->set_rules('last_name','Last Name','max_length[50]|required');
			$this->form_validation->set_rules('faculty_id[]','Faculty','required');
		
			if($this->form_validation->run())     
            {   
		
		
				$data = array(
					'first_name' => $this->input->post('first_name'),
					'last_name'  => $this->input->post('last_name'),
					'company'    => $this->input->post('company'),
					'phone'      => $this->input->post('phone'),
				);

				// update the password if it was posted
				if ($this->input->post('password'))
				{
					$data['password'] = $this->input->post('password');
				}
				
				$this->ion_auth->update($faculty_admin['user_id'], $data);
				/* $params = array(
					'faculty_id' => $this->input->post('faculty_id')
                );

                $this->Faculty_admin_model->update_faculty_admin($id,$params); */
				$this->Faculty_admin_model->delete_faculty_admin_by_user_id($faculty_admin['user_id']);
				$params = array();
				 foreach ($this->input->post('faculty_id') as $selectedOption){
					$faculty_admin_data = array(
					  'faculty_id' => $selectedOption,
					  'user_id' => $faculty_admin['user_id'],
				   );
				   $params[] = $faculty_admin_data;
				}  
				if(count($params)){
					 $faculty_admin_id = $this->Faculty_admin_model->add_faculty_admin_in_batch($params);
					 echo $this->db->last_query();
				}
				redirect('faculty_admin/index');
                          
			}
            else
            {   
		        $data['user'] = $this->User_model->get_user($faculty_admin['user_id']);
                $data['faculty_admin'] = $this->Faculty_admin_model->get_faculty_admin($id);
    
                $this->_tpl('faculty_admin/edit',$data);
            }
        }
        else
            show_error('The faculty_admin you are trying to edit does not exist.');
		
    } 

    /*
     * Deleting faculty_admin
     */
    function remove($id)
    {
        $faculty_admin = $this->Faculty_admin_model->get_faculty_admin($id);

        // check if the faculty_admin exists before trying to delete it
        if(isset($faculty_admin['id']))
        {
			$this->ion_auth->delete_user($faculty_admin['user_id']);
            $this->Faculty_admin_model->delete_faculty_admin_by_user_id($faculty_admin['user_id']);
            redirect('faculty_admin/index');
        }
        else
            show_error('The faculty_admin you are trying to delete does not exist.');
    }
    
}
